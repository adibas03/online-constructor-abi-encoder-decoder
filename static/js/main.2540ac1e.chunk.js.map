{"version":3,"sources":["config/app.js","config/types.js","pages/encode.js","pages/decode.js","styles/createContext.js","components/withRoot.js","config/actions.js","styles/pages.js","pages/index.js","index.js"],"names":["require","description","name","email","suffixed","Log","window","console","log","Encoder","props","encodeData","bind","typeUpdated","valueUpdated","state","types","values","encoded","error","submitted","eth","web3AbiCoder","abi","matched","this","matchRegExpValues","map","val","overlook","snoop","length","substring","testArrayRegExpValues","stripArray","testStringRegExpValues","testRegExpValues","parseForEncode","self","that","clean","vals","split","array","ValidTypes","t","indexOf","forEach","v","id","testRegExp","Object","assign","setState","arrayregex","RegExp","matchedValues","unsetArray","some","index","test","value","regEx","replace","match","push","search","found","a","trim","splice","join","event","handleChange","validateType","validateValue","typesSet","formFilled","errorExists","Error","encodeParameters","errorTypes","keys","i","target","clickEvent","type","select","classes","raised","className","topMargin","leftPadding","width95","topPadding","bottomMargin","formControl","actionFormControl","label","InputLabelProps","shrink","onChange","onKeyUp","helperText","fullWidth","margin","variant","color","button","right","onClick","multiline","InputProps","selectTarget","onFocus","readOnly","Component","Decoder","decodeData","decoded","decodeParameters","parseDecoded","toParse","typeLength","parsed","d","undefined","JSON","stringify","toString","Number","theme","createMuiTheme","palette","primary","blue","secondary","green","jss","create","preset","options","createGenerateClassName","AppWrapper","children","withStyles","html","background","default","WebkitFontSmoothing","MozOsxFontSmoothing","body","context","sheetsRegistry","SheetsRegistry","withRoot","BaseComponent","jssStyles","document","querySelector","parentNode","removeChild","registry","sheetsManager","styles","root","padding","marginTop","marginBottom","paddingTop","paddingLeft","rightPadding","paddingRight","float","left","width","marginLeft","marginRight","container","display","flexWrap","justifyContent","overflow","minWidth","selectEmpty","TopAppBar","position","introMsg","gutterBottom","href","ActionChooser","data","withRouter","history","action","location","pathname","to","Index","ethereum","Eth","givenProvider","e","handleActionChange","hash","createBrowserHistory","allowedActions","includes","htmlFor","key","path","strict","exact","rootElement","render"],"mappings":"6nDAEeA,EAAQ,KAAsBC,YAEpCD,EAAQ,KAAsBE,KAC7BF,EAAQ,KAAsBG,M,4FCLlCC,EAAW,CAAC,OAAO,MAAM,QAAQ,QAAQ,UAEhC,GACb,MACA,OACA,QACA,SACA,UACA,QACA,SACA,QCCIC,EAAMC,OAAOC,QAAQC,IA4SZC,E,YAzSb,WAAYC,GAAQ,IAAD,uBACjB,4CAAMA,KAGDC,WAAa,EAAKA,WAAWC,KAAhB,gBAElB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAKG,MAAQ,CACXC,MAAQ,GACRC,OAAQ,GACRC,QAAS,GACTC,MAAM,GACNC,WAAU,GAdK,IAiBTC,EAAQ,EAAKX,MAAbW,IAjBS,OAkBjB,EAAKC,aAAeD,EAAIE,IAlBP,E,4EAqBHN,GAAS,IAAD,OAChBO,EAAUC,KAAKC,kBAAkBT,GAEvC,OAAOO,EACLA,EAAQG,IAAI,SAACC,GACX,IAAIC,GAAW,EACXC,GAAQ,EAEZ,OAAKF,GAAe,MAARA,GAGc,MAAtBA,EAAIA,EAAIG,OAAO,KACjBH,EAAMA,EAAII,UAAU,EAAGJ,EAAIG,OAAO,IAEhCH,GAAQ,EAAKK,sBAAsBL,KACrCA,EAAM,EAAKM,WAAWN,GACtBE,GAAQ,GAEN,EAAKK,uBAAuBP,KAC9BA,EAAMA,EAAII,UAAU,EAAGJ,EAAIG,OAAO,GAClCF,GAAW,IAETC,IAAWD,GAAY,EAAKO,iBAAiBR,MAC/CA,EAAM,EAAKS,eAAeT,IAErBA,GAhBE,KAiBN,K,mCAGKU,GACZ,GAAIA,GAAqC,IAA7Bb,KAAKV,MAAME,OAAOc,QAAiBN,KAAKV,MAAMK,UAA1D,CAEA,IAAImB,EAAOd,KAAKe,GAAQ,EACxBC,EAAOhB,KAAKV,MAAMC,MAAM0B,MAAM,KAC9BC,EAAQC,EAAWjB,IAAI,SAASkB,GAE9B,OADAA,EAAIzC,EAAS0C,QAAQD,IAAM,EAAGA,EAAE,KAAKA,IAiBvC,GAbAJ,EAAKM,QAAQ,SAASC,EAAEC,GACtB,IAAGA,IAAOR,EAAKV,OAAO,GAAW,KAANiB,IAGtBT,EAAKW,WAAWF,EAAEL,GAAS,EAAE,CAC9BH,GAAQ,EACR,IAAIrB,EAAQ,CACZA,OAAiB,GACbJ,EAAQ,CAACI,MAAMgC,OAAOC,OAAOb,EAAKxB,MAAMI,MAAMA,IAClD,OAAOoB,EAAKc,SAAStC,MAIxByB,EAAM,CACP,IAAIrB,EAAQ,CACZA,OAAiB,GACbJ,EAAQ,CAACI,MAAMgC,OAAOC,OAAO3B,KAAKV,MAAMI,MAAMA,IAClD,OAAOM,KAAK4B,SAAStC,O,oCAIVuB,GACb,GAAIA,GAAqC,IAA7Bb,KAAKV,MAAME,OAAOc,QAAiBN,KAAKV,MAAMK,UAA1D,CAGA,IAAMJ,EAAQS,KAAKV,MAAMC,MAAM0B,MAAM,KAC/BY,EAAa,IAAIC,OAAO,YAC1BpC,EAAQ,GAENqC,EAAgB/B,KAAKY,eAAeZ,KAAKV,MAAME,SAAW,GAC1DwC,EAAaD,EAAczB,QAAUyB,EAAcE,KAAK,SAAC9B,EAAK+B,GAAN,OAC3DL,EAAWM,KAAK5C,EAAM2C,MAA2B,kBAAR/B,GAA0C,qBAAfA,EAAIG,UACvEuB,EAAWM,KAAK5C,EAAM2C,KAA2B,kBAAR/B,IAG1CZ,EAAMe,SAAWyB,EAAczB,QAAU0B,EAC1CtC,EAAK,QAAa,EAElBA,EAAK,QAAa,EAEpB,IAAIJ,EAAQ,CAACI,MAAMgC,OAAOC,OAAO3B,KAAKV,MAAMI,MAAMA,IAClD,OAAOM,KAAK4B,SAAStC,M,iCAGZ8C,GACT,IAAMC,EAAQ,IAAIP,OAAO,aACzB,OAAOM,EAAME,QAAQD,EAAM,M,wCAGV7C,GACjB,IAAM6C,EAAQ,IAAIP,OAAO,qIACnB/B,EAAUP,EAAO+C,MAAMF,GAK7B,MAHgC,MAA5B7C,EAAOA,EAAOc,OAAO,IACvBP,EAAQyC,KAAK,IAERzC,I,iCAGG0C,EAAQvB,GAClB,IAAIwB,EAAQ,EAKZ,OAJAxB,EAAMI,QAAQ,SAASqB,GAClB,IAAIb,OAAOa,GAAGR,KAAKM,IAAwD,IAA7CA,EAAOG,OAAOL,MAAM,IAAIT,OAAOa,IAAIT,OACpEQ,MAEKA,I,uCAGSlD,GAEhB,OADc,IAAIsC,OAAO,UACZK,KAAK3C,K,4CAGGA,GAErB,OADc,IAAIsC,OAAO,YACZK,KAAK3C,K,6CAGIA,GAEtB,OADc,IAAIsC,OAAO,YACZK,KAAK3C,K,iCAIlB,IAAID,EAAQS,KAAKV,MAAMC,MACvB,GAAIA,KAASA,EAAMe,OAAO,GAA1B,CAIA,IAAK,IAAIc,GADT7B,EAAOA,EAAM+C,QAAQ,KAAK,IAAIrB,MAAM,MACnBX,OAAOc,EAAE,EAAEA,IACtB7B,EAAM6B,IACR7B,EAAMsD,OAAOzB,EAAE,GAGnB,OADApB,KAAK4B,SAAS,CAACrC,MAAMA,EAAMuD,KAAK,QACzB,K,kCAGIC,GAGX,OAFA/C,KAAKgD,aAAa,QAASD,GAC3B/C,KAAKiD,cAAa,GACXjD,KAAKkD,kB,mCAGAH,GAIZ,OAHA/C,KAAKmD,WACLnD,KAAKiD,eACLjD,KAAKgD,aAAa,SAAUD,GACrB/C,KAAKkD,eAAc,K,4JAI1BlD,KAAK4B,SAAS,CAAEjC,WAAW,I,SACrBK,KAAKmD,W,UACXnD,KAAKiD,eACLjD,KAAKkD,gBAEDlD,KAAKoD,eAAgBpD,KAAKqD,c,6DAGxB9D,EAAQS,KAAKV,MAAMC,MAAM0B,MAAM,KAC/BzB,EAASQ,KAAKY,eAAeZ,KAAKV,MAAME,QAE5CZ,EAAIW,EAAMC,GAEPD,EAAMe,SAAWd,EAAOc,O,uBACnB,IAAIgD,MAAM,yB,QAEd7D,EAAUO,KAAKH,aAAa0D,iBAAiBhE,EAAOC,GACxDZ,EAAIa,GAEJO,KAAK4B,SAAS,CAAEnC,QAASA,EAAQc,UAAU,K,wDAGrC,IAAI+C,MAAJ,M,iJAKR,OAAOtD,KAAKV,MAAMC,OAASS,KAAKV,MAAME,S,oCAKtC,IADA,IAAMgE,EAAa9B,OAAO+B,KAAKzD,KAAKV,MAAMI,OACjCgE,EAAE,EAAGA,EAAEF,EAAWlD,OAAQoD,IACjC,GAAG1D,KAAKV,MAAMI,MAAMgE,GAClB,OAAO,EAEX,OAAO,I,mCAGKjF,EAAOsE,GAAS,IAAD,EAC3B/C,KAAK4B,UAAL,mBAAiBnD,EAAOsE,EAAMY,OAAOvB,OAArC,2BAAsD,GAAtD,M,mCAGYwB,GACmB,aAA3BA,EAAWD,OAAOE,MACtBD,EAAWD,OAAOG,W,+BAGX,IACCC,EAAY/D,KAAKf,MAAjB8E,QAER,OACE,6BACE,kBAAC,IAAD,CAAMC,QAAQ,EAAMC,UAAWF,EAAQG,UAAU,IAAIH,EAAQI,YAAY,IAAIJ,EAAQK,SAEjF,yBAAKH,UAAWF,EAAQM,WAAW,IAAIN,EAAQO,cAC7C,kBAAC,IAAD,CAAaL,UAAaF,EAAQQ,YAAY,IAAIR,EAAQS,mBACxD,kBAAC,IAAD,CACEhD,GAAG,aACHiD,MAAM,iBACNC,gBAAiB,CACfC,QAAQ,GAEVvC,MAAOpC,KAAKV,MAAMC,MAClBG,MAAOM,KAAKV,MAAMI,MAAMH,MACxBqF,SAAU5E,KAAKZ,YACfyF,QAAS7E,KAAKZ,YACd0F,WAAW,iDACXC,WAAS,EACTC,OAAO,WAET,kBAAC,IAAD,CACExD,GAAG,aACHiD,MAAM,kBACNC,gBAAiB,CACfC,QAAQ,GAEVvC,MAAOpC,KAAKV,MAAME,OAClBE,MAAOM,KAAKV,MAAMI,MAAMF,OACxBoF,SAAU5E,KAAKX,aACfwF,QAAS7E,KAAKX,aACdyF,WAAU,qKACVC,WAAS,EACTC,OAAO,WAEX,yBAAKf,UAAWF,EAAQM,YACtB,kBAAC,IAAD,CAAQY,QAAQ,YAAYC,MAAM,UAAUjB,UAAWF,EAAQoB,OAAO,IAAIpB,EAAQqB,MAAOC,QAASrF,KAAKd,YAAvG,cAOPc,KAAKoD,eAAiBpD,KAAKqD,eAAiBrD,KAAKV,MAAMK,WACpD,kBAAC,IAAD,CAAMqE,QAAQ,EAAMC,UAAWF,EAAQG,UAAU,IAAIH,EAAQI,YAAY,IAAIJ,EAAQK,SACnF,kBAAC,IAAD,CAAaH,UAAaF,EAAQQ,YAAY,IAAIR,EAAQS,mBACxD,kBAAC,IAAD,CACEhD,GAAG,aACH8D,WAAS,EACTb,MAAM,UACNC,gBAAiB,CACfC,QAAQ,GAEVY,WAAY,CACVF,QAASrF,KAAKwF,aACdC,QAASzF,KAAKwF,cAEhBpD,MAAOpC,KAAKV,MAAMG,QAClBqF,WAAW,wBACXC,WAAS,EACTC,OAAO,SACPC,QAAQ,SACRS,UAAU,W,GA5RNC,aCHhB/G,EAAMC,OAAOC,QAAQC,IAwOZ6G,E,YArOb,WAAY3G,GAAQ,IAAD,uBACjB,4CAAMA,KAGD4G,WAAa,EAAKA,WAAW1G,KAAhB,gBAElB,EAAKC,YAAc,EAAKA,YAAYD,KAAjB,gBACnB,EAAKE,aAAe,EAAKA,aAAaF,KAAlB,gBAEpB,EAAKG,MAAQ,CACXC,MAAQ,GACR6C,MAAO,GACP0D,QAAS,GACTpG,MAAM,GACNC,WAAU,GAdK,IAiBTC,EAAQ,EAAKX,MAAbW,IAjBS,OAkBjB,EAAKC,aAAeD,EAAIE,IAlBP,E,wEAqBP2C,EAAQvB,GAClB,IAAIwB,EAAQ,EAKZ,OAJAxB,EAAMI,QAAQ,SAASqB,GAClB,IAAIb,OAAOa,GAAGR,KAAKM,IAAwD,IAA7CA,EAAOG,OAAOL,MAAM,IAAIT,OAAOa,IAAIT,OACpEQ,MAEKA,I,mCAGK7B,GACZ,GAAIA,GAAoC,IAA5Bb,KAAKV,MAAM8C,MAAM9B,QAAiBN,KAAKV,MAAMK,UAAzD,CAEA,IAAImB,EAAOd,KAAKe,GAAQ,EACxBC,EAAOhB,KAAKV,MAAMC,MAAM0B,MAAM,KAC9BC,EAAQC,EAAWjB,IAAI,SAASkB,GAE9B,OADAA,EAAIzC,EAAS0C,QAAQD,IAAM,EAAGA,EAAE,KAAKA,IAcvC,GAVAJ,EAAKM,QAAQ,SAASC,EAAEC,GACtB,IAAKA,IAAOR,EAAKV,OAAO,GAAW,KAANiB,IACxBT,EAAKW,WAAWF,EAAEL,GAAS,EAAE,CAC9BH,GAAQ,EACR,IAAIrB,EAAQ,CAAGA,OAAiB,GAC5BJ,EAAQ,CAACI,MAAMgC,OAAOC,OAAOb,EAAKxB,MAAMI,MAAMA,IAClD,OAAOoB,EAAKc,SAAStC,MAIxByB,EAAM,CACP,IAAIrB,EAAQ,CAAGA,OAAiB,GAC5BJ,EAAQ,CAACI,MAAMgC,OAAOC,OAAO3B,KAAKV,MAAMI,MAAMA,IAClD,OAAOM,KAAK4B,SAAStC,O,iCAKvB,IAAIC,EAAQS,KAAKV,MAAMC,MACvB,GAAIA,KAASA,EAAMe,OAAO,GAA1B,CAIA,IAAK,IAAIc,GADT7B,EAAOA,EAAM+C,QAAQ,KAAK,IAAIrB,MAAM,MACnBX,OAAOc,EAAE,EAAEA,IACtB7B,EAAM6B,IACR7B,EAAMsD,OAAOzB,EAAE,GAGnB,OADApB,KAAK4B,SAAS,CAACrC,MAAMA,EAAMuD,KAAK,QACzB,K,kCAGIC,GAEX,OADA/C,KAAKgD,aAAa,QAASD,GACpB/C,KAAKiD,cAAa,K,mCAGbF,GAGZ,OAFA/C,KAAKmD,WACLnD,KAAKiD,eACEjD,KAAKgD,aAAa,QAASD,K,4JAIlC/C,KAAK4B,SAAS,CAAEjC,WAAW,I,SACrBK,KAAKmD,W,UACXnD,KAAKiD,eAEDjD,KAAKoD,eAAgBpD,KAAKqD,c,0DAGxB9D,EAAQS,KAAKV,MAAMC,MAAM0B,MAAM,KAGR,KAFvBmB,EAAQpC,KAAKV,MAAM8C,OAEdf,QAAQ,QACfe,EAAQ,KAAKA,GAEfxD,EAAIW,EAAM6C,GAEN0D,EAAU9F,KAAKH,aAAakG,iBAAiBxG,EAAO6C,GAExD0D,EAAU9F,KAAKgG,aAAaF,GAC5BlH,EAAIkH,GAEJ9F,KAAK4B,SAAS,CAAEkE,QAASA,EAAQhD,KAAK,O,wDAGhC,IAAIQ,MAAJ,M,iJAII2C,GACZ,IAAMnF,EAAOd,KACPkG,EAAalG,KAAKV,MAAMC,MAAM0B,MAAM,KAAKX,OACzC6F,EAASzE,OAAO+B,KAAKwC,GAAS/F,IAAI,SAASsB,GAC/C,IAAM4E,EAAIH,EAAQzE,GAClB,MAAqB,kBAAN4E,QAA+BC,IAAbD,EAAE9F,OACjCgG,KAAKC,UAAUzF,EAAKkF,aAAaI,IAAI9D,QAAQ,KAAK,IAElD8D,EAAEI,aAON,OAHIL,EAAO7F,OAAS4F,GAAcC,EAAOA,EAAO7F,OAAO,IAAMmG,OAAON,EAAOA,EAAO7F,OAAO,IAAIkG,aAAeL,EAAOA,EAAO7F,OAAO,IAC/H6F,EAAOtD,OAAOsD,EAAO7F,OAAO,EAAG,GAE1B6F,I,mCAIP,OAAOnG,KAAKV,MAAMC,OAASS,KAAKV,MAAM8C,Q,oCAKtC,IADA,IAAMoB,EAAa9B,OAAO+B,KAAKzD,KAAKV,MAAMI,OACjCgE,EAAE,EAAGA,EAAEF,EAAWlD,OAAQoD,IACjC,GAAG1D,KAAKV,MAAMI,MAAMgE,GAClB,OAAO,EAEX,OAAO,I,mCAGKjF,EAAMsE,GAAQ,IAAD,EACzB/C,KAAK4B,UAAL,mBAAiBnD,EAAOsE,EAAMY,OAAOvB,OAArC,2BAAsD,GAAtD,M,mCAGYwB,GACmB,aAA3BA,EAAWD,OAAOE,MACtBD,EAAWD,OAAOG,W,+BAGX,IACCC,EAAY/D,KAAKf,MAAjB8E,QAER,OACE,6BACE,kBAAC,IAAD,CAAMC,QAAQ,EAAMC,UAAWF,EAAQG,UAAU,IAAIH,EAAQI,YAAY,IAAIJ,EAAQK,SAEjF,yBAAKH,UAAWF,EAAQM,WAAW,IAAIN,EAAQO,cAC7C,kBAAC,IAAD,CAAaL,UAAaF,EAAQQ,YAAY,IAAIR,EAAQS,mBACxD,kBAAC,IAAD,CACEhD,GAAG,aACHiD,MAAM,iBACNC,gBAAiB,CACfC,QAAQ,GAEVvC,MAAOpC,KAAKV,MAAMC,MAClBG,MAAOM,KAAKV,MAAMI,MAAMH,MACxBqF,SAAU5E,KAAKZ,YACfyF,QAAS7E,KAAKZ,YACd0F,WAAW,iDACXC,WAAS,EACTC,OAAO,WAET,kBAAC,IAAD,CACExD,GAAG,aACHiD,MAAM,eACNa,WAAS,EACTZ,gBAAiB,CACfC,QAAQ,GAEVvC,MAAOpC,KAAKV,MAAM8C,MAClB1C,MAAOM,KAAKV,MAAMI,MAAM0C,MACxBwC,SAAU5E,KAAKX,aACfwF,QAAS7E,KAAKX,aACdyF,WAAW,qCACXC,WAAS,EACTC,OAAO,WAEX,yBAAKf,UAAWF,EAAQM,YACtB,kBAAC,IAAD,CAAQY,QAAQ,YAAYC,MAAM,UAAUjB,UAAWF,EAAQoB,OAAO,IAAIpB,EAAQqB,MAAOC,QAASrF,KAAK6F,YAAvG,cAOP7F,KAAKoD,eAAiBpD,KAAKqD,eAAiBrD,KAAKV,MAAMK,WACpD,kBAAC,IAAD,CAAMqE,QAAQ,EAAMC,UAAWF,EAAQG,UAAU,IAAIH,EAAQI,YAAY,IAAIJ,EAAQK,SACnF,kBAAC,IAAD,CAAaH,UAAaF,EAAQQ,YAAY,IAAIR,EAAQS,mBACxD,kBAAC,IAAD,CACEhD,GAAG,aACH8D,WAAS,EACTb,MAAM,UACNC,gBAAiB,CACfC,QAAQ,GAEVY,WAAY,CACVF,QAASrF,KAAKwF,aACdC,QAASzF,KAAKwF,cAEhBpD,MAAOpC,KAAKV,MAAMwG,QAClBhB,WAAW,wBACXC,WAAS,EACTC,OAAO,SACPC,QAAQ,SACRS,UAAU,W,GAxNNC,a,6MCNhBe,GAAQC,yBAAe,CAC3BC,QAAS,CACPC,QAASC,OACTC,UAAWC,WAKTC,GAAMC,iBAAOC,OACnBF,GAAIG,QAAQC,wBAA0BA,KCNtC,IAaIC,GAAa,SAAArI,GAAK,OAAIA,EAAMsI,UAEhCD,GAAaE,qBAfE,SAAAd,GAAK,MAAK,CACvB,UAAW,CACTe,KAAM,CACJC,WAAYhB,EAAME,QAAQc,WAAWC,QACrCC,oBAAqB,cACrBC,oBAAqB,aAEvBC,KAAM,CACJ9C,OAAQ,MAODwC,CAAmBF,IAEhC,IAAMS,GDRG,CACLd,OACAP,SAEAsB,eAAgB,IAAIC,kBCsCTC,OAhCf,SAAkBC,GA6BhB,OA7B+B,4LAI3B,IAAMC,EAAYC,SAASC,cAAc,oBACrCF,GAAaA,EAAUG,YACzBH,EAAUG,WAAWC,YAAYJ,KANR,+BAW3B,OACE,kBAAC,IAAD,CAAaK,SAAUV,GAAQC,eAAgBf,IAAKc,GAAQd,KAC1D,kBAAC,mBAAD,CAAkBP,MAAOqB,GAAQrB,MAAOgC,cAAeX,GAAQW,eAC7D,kBAACpB,GAAD,KACE,kBAAC,IAAD,KACE,kBAACa,EAAkBnI,KAAKf,eAhBP,GACR0G,cC7BV,IACX,SACA,UCmDWgD,GArDA,CACbC,KAAM,CACJ5D,OAAO,EACP6D,QAAQ,GAEV3E,UAAU,CACR4E,UAAU,IAEZxE,aAAa,CACXyE,aAAa,IAEf1E,WAAW,CACT2E,WAAW,IAEb7E,YAAY,CACV8E,YAAY,IAEdC,aAAa,CACXC,aAAa,IAEf/D,MAAM,CACJgE,MAAM,SAERC,KAAK,CACHD,MAAM,QAERhF,QAAQ,CACNkF,MAAM,MACNC,WAAW,OACXC,YAAY,QAEdC,UAAW,CACTC,QAAS,OACTC,SAAU,OACVC,eAAgB,eAChBC,SAAU,UAEZtF,YAAa,CACXS,OAAQ,GACR8E,SAAU,KAEZC,YAAa,CACXjB,UAAW,IAEbtE,kBAAmB,CACjB8E,MAAM,OAERnE,OAAO,CACLH,OAAQ,QClBNgF,GAAY,kBAChB,kBAAC,IAAD,CAAQC,SAAS,UACf,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYpG,KAAK,QAAQqB,MAAM,WRhC5B,8CQ0CHgF,GACJ,6BACE,kBAAC,IAAD,CAAYrG,KAAK,QAAQsG,cAAY,GAArC,0DAGA,6BACA,kBAAC,IAAD,CAAYtG,KAAK,QAAQsG,cAAY,GAArC,0FAEiC,6BAFjC,UAIM,uBAAGC,KAAK,mEAAR,mEAEE,6BAAK,6BANb,6BAO4B,6BAP5B,aAQgB,2EAMdC,GAAgB,SAACC,GASrB,OARaC,YAAW,YAAc,IAAZC,EAAW,EAAXA,QACpBC,EAA+B,KAAtBH,EAAKhL,MAAMmL,OAAc,IAAI,IAAIH,EAAKhL,MAAMmL,OACzD,MAAqB,qBAAXA,GAA0BD,EAAQE,SAASC,WAAaF,EACzD,GAEA,kBAAC,IAAD,CAAUG,GAAI,CAAED,SAASF,MALvBF,CAOV,gCAICM,G,YACJ,WAAY5L,GAAQ,IAAD,sBACjB,4CAAMA,IAEN,IACMJ,OAAOiM,SACT,EAAKlL,IAAM,IAAImL,IAAIlM,OAAOiM,UAE1B,EAAKlL,IAAM,IAAImL,IAAIA,IAAIC,eAAiB,yBAE1C,MAAOC,GACP,EAAKrL,IAAM,IAAImL,IAAI,8BAIrB,EAAKG,mBAAqB,EAAKA,mBAAmB/L,KAAxB,gBAC1B,EAAK6D,aAAe,EAAKA,aAAa7D,KAAlB,gBAEpB,IACMgM,EADUC,cACKV,SAASS,KACxBV,EAASU,GAAQA,EAAK5K,UAAU4K,EAAK9J,QAAQ,KAAK,EAAG8J,EAAK7K,QAnB/C,MAqBJ,OAAT6K,GAAiBE,GAAeC,SAASb,GAC3C,EAAKnL,MAAQ,CACTmL,UAGJ,EAAKnL,MAAQ,CACTmL,OAAQ,IA3BG,E,gFAgCC1H,GAClB/C,KAAKgD,aAAa,SAAUD,K,mCAGhBtE,EAAMsE,GAClB/C,KAAK4B,SAAL,eAAiBnD,EAAOsE,EAAMY,OAAOvB,U,+BAG7B,IACA2B,EAAY/D,KAAKf,MAAjB8E,QACF9E,EAAQ,CAAEW,IAAKI,KAAKJ,KAE1B,OACE,6BACE,kBAAC,GAAD,MACE,yBAAKqE,UAAWF,EAAQ6E,MACtB,kBAAC,IAAD,CAAM5E,QAAQ,EAAMC,UAAWF,EAAQG,UAAU,IAAIH,EAAQO,aAAa,IAAIP,EAAQI,YAAY,IAAIJ,EAAQK,SAC5G,yBAAKH,UAAWF,EAAQM,YAAa6F,IACrC,kBAAC,IAAD,CAAajG,UAAWF,EAAQQ,aAC9B,kBAAC,IAAD,CAAYgH,QAAQ,iBAApB,UACA,kBAAC,IAAD,CACAnJ,MAAOpC,KAAKV,MAAMmL,OAClB7F,SAAU5E,KAAKkL,oBACb,kBAAC,IAAD,CAAU9I,MAAM,GAAGoJ,IAAI,IACrB,6CAEF,kBAAC,IAAD,CAAUpJ,MAAOiJ,GAAe,IAC/BA,GAAe,IAEhB,kBAAC,IAAD,CAAUjJ,MAAOiJ,GAAe,IAC/BA,GAAe,KAGlB,kBAAC,GAAkB,CAAC/L,MAAOU,KAAKV,UAIpC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOmM,KAAK,IAAIC,QAAM,EAACC,OAAK,IAE5B,kBAAC,IAAD,CAAOF,KAAI,WAAMJ,GAAe,KAC5B,kBAAC,EAAY3J,OAAOC,OAAO,GAAI1C,EAAOe,KAAKf,SAE/C,kBAAC,IAAD,CAAOwM,KAAI,WAAMJ,GAAe,KAC5B,kBAAC,EAAY3J,OAAOC,OAAO,GAAI1C,EAAOe,KAAKf,gB,GA7EzC0G,aA2FLuC,MAASV,qBAAYmB,GAAZnB,CAAqBqD,KChKvCe,GAAcvD,SAASC,cAAc,SACvCsD,IACFC,iBAAO,kBAAC,GAAD,MAAWD,M","file":"static/js/main.2540ac1e.chunk.js","sourcesContent":["const\n title = \"Online Ethereum abi encoder and decoder\",\n description = require(\"../../package.json\").description,\n author = {\n   name: require(\"../../package.json\").name,\n   email: require(\"../../package.json\").email,\n   github: \"https://adibas03@github.com\"\n };\n\n export { title,description,author };\n","const suffixed = [\"uint\",\"int\",\"bytes\",\"fixed\",\"ufixed\"];\n\nexport default [\n  \"int\",\n  \"uint\",\n  \"fixed\",\n  \"ufixed\",\n  \"address\",\n  \"bytes\",\n  \"string\",\n  \"bool\"\n];\n\nexport { suffixed };","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\nimport ValidTypes from \"../config/types\";\nimport { suffixed } from \"../config/types\";\nconst Log = window.console.log;\n\nclass Encoder extends Component{\n  constructor(props) {\n    super(props);\n\n    //Handle binds\n    this.encodeData = this.encodeData.bind(this);\n\n    this.typeUpdated = this.typeUpdated.bind(this);\n    this.valueUpdated = this.valueUpdated.bind(this);\n\n    this.state = {\n      types : \"\",\n      values: \"\",\n      encoded: \"\",\n      error:{},\n      submitted:false\n      };\n\n    const { eth } = this.props;\n    this.web3AbiCoder = eth.abi;\n  }\n\n  parseForEncode (values) {\n    const matched = this.matchRegExpValues(values);\n    \n    return matched ?\n      matched.map((val) => {\n        let overlook = false;\n        let snoop = false;\n\n        if (!val || val === \",\") {\n          return \"\";\n        }\n        if (val[val.length-1] === \",\") {\n          val = val.substring(0, val.length-1);\n        }\n        if (val &&  this.testArrayRegExpValues(val)) {\n          val = this.stripArray(val);\n          snoop = true;\n        }\n        if (this.testStringRegExpValues(val)) {\n          val = val.substring(1, val.length-1);\n          overlook = true;\n        }\n        if (snoop || (!overlook && this.testRegExpValues(val))) {\n          val = this.parseForEncode(val);\n        }\n        return val;\n      }) : [];\n  }\n\n  validateType (self) {\n    if(!self && this.state.values.length === 0 && !this.state.submitted)\n      return;\n    let that = this,clean = true,\n    vals = this.state.types.split(\",\"),\n    array = ValidTypes.map(function(t){\n      t = suffixed.indexOf(t) > -1? t+\".*\":t;\n      return t;\n    });\n\n    vals.forEach(function(v,id){\n      if(id === vals.length-1 && v === \"\") {\n        return;\n      } else {\n        if(that.testRegExp(v,array) < 1){\n          clean = false;\n          let error = {};\n          error[\"types\"] = true;\n          let state = {error:Object.assign(that.state.error,error)};\n          return that.setState(state);\n        }\n      }\n    });\n    if(clean){\n      let error = {};\n      error[\"types\"] = false;\n      let state = {error:Object.assign(this.state.error,error)};\n      return this.setState(state);\n    }\n  }\n\n  validateValue (self) {\n    if(!self && this.state.values.length === 0 && !this.state.submitted)\n      return;\n\n    const types = this.state.types.split(\",\");\n    const arrayregex = new RegExp(/(\\[.*\\])/);\n    let error = {};\n\n    const matchedValues = this.parseForEncode(this.state.values) || [];\n    const unsetArray = matchedValues.length && matchedValues.some((val, index) =>\n      (arrayregex.test(types[index]) && (typeof val !== \"object\" || typeof val.length === \"undefined\")) ||\n      (!arrayregex.test(types[index]) && (typeof val === \"object\"))\n    );\n\n    if(types.length !== matchedValues.length || unsetArray)\n      error[\"values\"] = true;\n    else\n      error[\"values\"] = false;\n\n    let state = {error:Object.assign(this.state.error,error)};\n    return this.setState(state);\n  }\n\n  stripArray(value) {\n    const regEx = new RegExp(/^\\[|\\]$/gi);\n    return value.replace(regEx,\"\");\n  }\n\n  matchRegExpValues (values) {\n    const regEx = new RegExp(/(\\[[0-9a-z\\s:!@#'\",$%^&?*)(\\\\+=._-]+,?\\],?|(\"[0-9a-z\\s:!@#'$%^&?*)(\\\\+=.,_-]+\",?|\"\",?)|([0-9a-z\\s:!@#'$%^&?*)(\\\\/+=._-]+,?|,))/gi);\n    const matched = values.match(regEx);\n\n    if (values[values.length-1] === \",\") {\n      matched.push(\"\");\n    }\n    return matched;\n  }\n\n  testRegExp (search, array) {\n    let found = 0;\n    array.forEach(function(a){\n      if(new RegExp(a).test(search) && search.trim().match(new RegExp(a)).index === 0)\n      found++;\n    });\n    return found;\n  }\n\n  testRegExpValues (values) {\n    const regEx = new RegExp(/(,+)/gi);\n    return regEx.test(values);\n  }\n\n  testArrayRegExpValues (values) {\n    const regEx = new RegExp(/\\[.*\\]/gi);\n    return regEx.test(values);\n  }\n\n  testStringRegExpValues (values) {\n    const regEx = new RegExp(/^\".*\"$/gi);\n    return regEx.test(values);\n  }\n\n  typesSet () {\n    let types = this.state.types;\n    if(!types || types.length<1)\n      return;\n\n    types= types.replace(/ /g,\"\").split(\",\");\n    for (let t=types.length;t>0;t--){\n      if(!types[t] )\n        types.splice(t,1);\n    }\n    this.setState({types:types.join(\",\")});\n    return true;\n  }\n\n  typeUpdated (event)  {\n    this.handleChange(\"types\", event);\n    this.validateType(true);\n    return this.validateValue();\n  }\n\n  valueUpdated (event)  {\n    this.typesSet();\n    this.validateType();\n    this.handleChange(\"values\", event);\n    return this.validateValue(true);\n  }\n\n  async encodeData (){\n    this.setState({ submitted: true });\n    await this.typesSet();\n    this.validateType();\n    this.validateValue();\n\n    if(!this.formFilled() || this.errorExists() )\n      return;\n    try{\n      let types = this.state.types.split(\",\");\n      let values = this.parseForEncode(this.state.values);\n\n      Log(types,values);\n\n      if(types.length !== values.length)\n        throw new Error(\"Types/values mismatch\");\n\n      let encoded = this.web3AbiCoder.encodeParameters(types, values);\n      Log(encoded);\n\n      this.setState({ encoded: encoded.substring(2) });\n    }\n    catch(e){\n      throw new Error(e);\n    }\n  }\n\n  formFilled () {\n    return this.state.types && this.state.values;\n  }\n\n  errorExists () {\n    const errorTypes = Object.keys(this.state.error);\n    for (let i=0; i<errorTypes.length; i++ ) {\n      if(this.state.error[i])\n        return true;\n    }\n    return false;\n  }\n\n  handleChange (name,  event)  {\n    this.setState({ [name]: event.target.value,submitted: false });\n  }\n\n  selectTarget (clickEvent) {\n    if (clickEvent.target.type !== \"textarea\") return;\n    clickEvent.target.select();\n  }\n\n  render(){\n    const { classes } = this.props;\n\n    return(\n      <div>\n        <Card raised={true} className={classes.topMargin+\" \"+classes.leftPadding+\" \"+classes.width95} >\n\n            <div className={classes.topPadding+\" \"+classes.bottomMargin} >\n              <FormControl className = {classes.formControl+\" \"+classes.actionFormControl} >\n                <TextField\n                  id=\"full-width\"\n                  label=\"Argument Types\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.state.types}\n                  error={this.state.error.types}\n                  onChange={this.typeUpdated}\n                  onKeyUp={this.typeUpdated}\n                  helperText=\"Add the value types, each seperated by a comma\"\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"full-width\"\n                  label=\"Argument values\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.state.values}\n                  error={this.state.error.values}\n                  onChange={this.valueUpdated}\n                  onKeyUp={this.valueUpdated}\n                  helperText={`Add the values to match the number of types indicated above, each seperated by a comma (No spaces), use [ ] to wrap array, use \" \" to wrap values containing comma${\"\"}`}\n                  fullWidth\n                  margin=\"normal\"\n                />\n              <div className={classes.topPadding}>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button+\" \"+classes.right} onClick={this.encodeData}>\n                  Encode\n                </Button>\n              </div>\n              </FormControl>\n            </div>\n        </Card>\n        {this.formFilled() && !this.errorExists() && this.state.submitted &&\n            <Card raised={true} className={classes.topMargin+\" \"+classes.leftPadding+\" \"+classes.width95} >\n              <FormControl className = {classes.formControl+\" \"+classes.actionFormControl} >\n                <TextField\n                  id=\"full-width\"\n                  multiline\n                  label=\"Encoded\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  InputProps={{\n                    onClick: this.selectTarget,\n                    onFocus: this.selectTarget\n                  }}\n                  value={this.state.encoded}\n                  helperText=\"Abi encoded arguments\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  readOnly={true}\n                />\n            </FormControl>\n        </Card>}\n      </div>\n    );\n  }\n}\n\nEncoder.propTypes = {\n  classes: PropTypes.object.isRequired,\n  eth: PropTypes.object\n};\n\nexport default Encoder;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Card from \"@material-ui/core/Card\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport ValidTypes from \"../config/types\";\nimport { suffixed } from \"../config/types\";\nconst Log = window.console.log;\n\nclass Decoder extends Component{\n  constructor(props) {\n    super(props);\n\n    //Handle binds\n    this.decodeData = this.decodeData.bind(this);\n\n    this.typeUpdated = this.typeUpdated.bind(this);\n    this.valueUpdated = this.valueUpdated.bind(this);\n\n    this.state = {\n      types : \"\",\n      value: \"\",\n      decoded: \"\",\n      error:{},\n      submitted:false\n      };\n\n    const { eth } = this.props;\n    this.web3AbiCoder = eth.abi;\n  }\n\n  testRegExp (search, array) {\n    let found = 0;\n    array.forEach(function(a){\n      if(new RegExp(a).test(search) && search.trim().match(new RegExp(a)).index === 0)\n      found++;\n    });\n    return found;\n  }\n\n  validateType (self) {\n    if(!self && this.state.value.length === 0 && !this.state.submitted)\n      return;\n    let that = this,clean = true,\n    vals = this.state.types.split(\",\"),\n    array = ValidTypes.map(function(t){\n      t = suffixed.indexOf(t) > -1? t+\".*\":t;\n      return t;\n    });\n\n    vals.forEach(function(v,id){\n      if(!(id === vals.length-1 && v === \"\" ))\n        if(that.testRegExp(v,array) < 1){\n          clean = false;\n          let error = {};error[\"types\"] = true;\n          let state = {error:Object.assign(that.state.error,error)};\n          return that.setState(state);\n        }\n    });\n\n    if(clean){\n      let error = {};error[\"types\"] = false;\n      let state = {error:Object.assign(this.state.error,error)};\n      return this.setState(state);\n    }\n  }\n\n  typesSet () {\n    let types = this.state.types;\n    if(!types || types.length<1)\n      return;\n\n    types= types.replace(/ /g,\"\").split(\",\");\n    for (let t=types.length;t>0;t--){\n      if(!types[t] )\n        types.splice(t,1);\n    }\n    this.setState({types:types.join(\",\")});\n    return true;\n  }\n\n  typeUpdated (event) {\n    this.handleChange(\"types\", event);\n    return this.validateType(true);\n  }\n\n  valueUpdated (event) {\n    this.typesSet();\n    this.validateType();\n    return this.handleChange(\"value\", event);\n  }\n\n  async decodeData (){\n    this.setState({ submitted: true });\n    await this.typesSet();\n    this.validateType();\n\n    if(!this.formFilled() || this.errorExists() )\n      return;\n    try{\n      let types = this.state.types.split(\",\");\n      let value = this.state.value;\n\n      if(value.indexOf(\"0x\") !== 0)\n        value = \"0x\"+value;\n\n      Log(types,value);\n\n      let decoded = this.web3AbiCoder.decodeParameters(types, value);\n      \n      decoded = this.parseDecoded(decoded);\n      Log(decoded);\n\n      this.setState({ decoded: decoded.join(\",\") });\n    }\n    catch(e){\n      throw new Error(e);\n    }\n  }\n\n  parseDecoded (toParse) {\n    const that = this;\n    const typeLength = this.state.types.split(\",\").length;\n    const parsed = Object.keys(toParse).map(function(id){\n      const d = toParse[id];\n      return (typeof d === \"object\" && d.length !== undefined) ?\n        JSON.stringify(that.parseDecoded(d)).replace(/\"/g,\"\")\n         :\n        d.toString();\n    });\n    //Quick fix to hide array length\n    //TODO write more elegant solution\n    if (parsed.length > typeLength && parsed[parsed.length-1] && Number(parsed[parsed.length-1]).toString() === parsed[parsed.length-1]) {\n      parsed.splice(parsed.length-1, 1);\n    }\n    return parsed;\n  }\n\n  formFilled () {\n    return this.state.types && this.state.value;\n  }\n\n  errorExists () {\n    const errorTypes = Object.keys(this.state.error);\n    for (let i=0; i<errorTypes.length; i++ ) {\n      if(this.state.error[i])\n        return true;\n    }\n    return false;\n  }\n\n  handleChange (name, event) {\n    this.setState({ [name]: event.target.value,submitted: false });\n  }\n\n  selectTarget (clickEvent) {\n    if (clickEvent.target.type !== \"textarea\") return;\n    clickEvent.target.select();\n  }\n\n  render(){\n    const { classes } = this.props;\n\n    return(\n      <div>\n        <Card raised={true} className={classes.topMargin+\" \"+classes.leftPadding+\" \"+classes.width95} >\n\n            <div className={classes.topPadding+\" \"+classes.bottomMargin} >\n              <FormControl className = {classes.formControl+\" \"+classes.actionFormControl} >\n                <TextField\n                  id=\"full-width\"\n                  label=\"Argument Types\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.state.types}\n                  error={this.state.error.types}\n                  onChange={this.typeUpdated}\n                  onKeyUp={this.typeUpdated}\n                  helperText=\"Add the value types, each seperated by a comma\"\n                  fullWidth\n                  margin=\"normal\"\n                />\n                <TextField\n                  id=\"full-width\"\n                  label=\"Encoded data\"\n                  multiline\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  value={this.state.value}\n                  error={this.state.error.value}\n                  onChange={this.valueUpdated}\n                  onKeyUp={this.valueUpdated}\n                  helperText=\"Add the encoded data to be decoded\"\n                  fullWidth\n                  margin=\"normal\"\n                />\n              <div className={classes.topPadding}>\n                <Button variant=\"contained\" color=\"primary\" className={classes.button+\" \"+classes.right} onClick={this.decodeData}>\n                  Decode\n                </Button>\n              </div>\n              </FormControl>\n            </div>\n        </Card>\n        {this.formFilled() && !this.errorExists() && this.state.submitted &&\n            <Card raised={true} className={classes.topMargin+\" \"+classes.leftPadding+\" \"+classes.width95} >\n              <FormControl className = {classes.formControl+\" \"+classes.actionFormControl} >\n                <TextField\n                  id=\"full-width\"\n                  multiline\n                  label=\"Decoded\"\n                  InputLabelProps={{\n                    shrink: true,\n                  }}\n                  InputProps={{\n                    onClick: this.selectTarget,\n                    onFocus: this.selectTarget\n                  }}\n                  value={this.state.decoded}\n                  helperText=\"Decoded Abi arguments\"\n                  fullWidth\n                  margin=\"normal\"\n                  variant=\"filled\"\n                  readOnly={true}\n                />\n            </FormControl>\n        </Card>}\n      </div>\n    );\n  }\n}\n\nDecoder.propTypes = {\n  classes: PropTypes.object.isRequired,\n  eth: PropTypes.object\n};\n\nexport default Decoder;\n","import { create, SheetsRegistry } from \"jss\";\nimport preset from \"jss-preset-default\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { blue, green } from \"@material-ui/core/colors\";\nimport createGenerateClassName from \"@material-ui/core/styles/createGenerateClassName\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue,\n    secondary: green,\n  },\n});\n\n// Configure JSS\nconst jss = create(preset());\njss.options.createGenerateClassName = createGenerateClassName;\n\nexport default function createContext() {\n  return {\n    jss,\n    theme,\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n  };\n}\n","import React, { Component } from \"react\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport JssProvider from \"react-jss/lib/JssProvider\";\nimport { withStyles, MuiThemeProvider } from \"@material-ui/core/styles\";\nimport wrapDisplayName from \"recompose/wrapDisplayName\";\nimport createContext from \"../styles/createContext\";\n\n// Apply some reset\nconst styles = theme => ({\n  \"@global\": {\n    html: {\n      background: theme.palette.background.default,\n      WebkitFontSmoothing: \"antialiased\", // Antialiasing.\n      MozOsxFontSmoothing: \"grayscale\", // Antialiasing.\n    },\n    body: {\n      margin: 0,\n    },\n  },\n});\n\nlet AppWrapper = props => props.children;\n\nAppWrapper = withStyles(styles)(AppWrapper);\n\nconst context = createContext();\n\nfunction withRoot(BaseComponent) {\n  class WithRoot extends Component {\n    componentDidMount() {\n      // Remove the server-side injected CSS.\n      const jssStyles = document.querySelector(\"#jss-server-side\");\n      if (jssStyles && jssStyles.parentNode) {\n        jssStyles.parentNode.removeChild(jssStyles);\n      }\n    }\n\n    render() {\n      return (\n        <JssProvider registry={context.sheetsRegistry} jss={context.jss}>\n          <MuiThemeProvider theme={context.theme} sheetsManager={context.sheetsManager}>\n            <AppWrapper>\n              <HashRouter>\n                <BaseComponent {...this.props} />\n              </HashRouter>\n            </AppWrapper>\n          </MuiThemeProvider>\n        </JssProvider>\n      );\n    }\n  }\n\n  if (process.env.NODE_ENV !== \"production\") {\n    WithRoot.displayName = wrapDisplayName(BaseComponent, \"withRoot\");\n  }\n\n  return WithRoot;\n}\n\nexport default withRoot;\n","export default [\n    \"encode\",\n    \"decode\"\n];","const styles = {\n  root: {\n    margin:0,\n    padding:0\n  },\n  topMargin:{\n    marginTop:20\n  },\n  bottomMargin:{\n    marginBottom:20\n  },\n  topPadding:{\n    paddingTop:20\n  },\n  leftPadding:{\n    paddingLeft:15\n  },\n  rightPadding:{\n    paddingRight:15\n  },\n  right:{\n    float:\"right\"\n  },\n  left:{\n    float:\"left\"\n  },\n  width95:{\n    width:\"95%\",\n    marginLeft:\"auto\",\n    marginRight:\"auto\"\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-around\",\n    overflow: \"hidden\"\n  },\n  formControl: {\n    margin: 20,\n    minWidth: 120,\n  },\n  selectEmpty: {\n    marginTop: 20 * 2,\n  },\n  actionFormControl: {\n    width:\"94%\",\n  },\n  button:{\n    margin: \"8px\",\n  }\n\n};\n\nexport default styles;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport PropTypes from \"prop-types\";\n\nimport Eth from \"web3-eth\";\n\nimport { title } from \"../config/app\";\n\nimport Encoder from \"./encode\";\nimport Decoder from \"./decode\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\n\nimport Card from \"@material-ui/core/Card\";\n\nimport FormControl from \"@material-ui/core/FormControl\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport withRoot from \"../components/withRoot\";\nimport allowedActions from \"../config/actions\";\n\nimport styles from \"../styles/pages\";\n\nconst TopAppBar = () => (\n  <AppBar position=\"static\" >\n    <Toolbar>\n      <Typography type=\"title\" color=\"inherit\">\n        {title}\n      </Typography>\n    </Toolbar>\n  </AppBar>\n  /*<AppBar\n    title= \"this Title\"\n  />*/\n);\n\nconst introMsg = (\n  <div>\n    <Typography type=\"title\" gutterBottom>\n          Welcome to the Online Ethereum Abi encoder and decoder\n    </Typography>\n    <hr/>\n    <Typography type=\"body2\" gutterBottom>\n          The tool was designed to make easy encoding and decoding of\n          Ethereum solidity abi data.<br/>\n          Github:\n          <a href=\"https://github.com/adibas03/online-ethereum-abi-encoder-decoder\" >\n          https://github.com/adibas03/online-ethereum-abi-encoder-decoder\n        </a><br/><br/>\n      Buy me a Coffe or a Beer  <br/>\n          Ethereum: <b>0x965D1C9987BD2c34e151E63d60AFf8E9dB6b1561</b>\n    </Typography>\n  </div>\n\n);\n\nconst ActionChooser = (data) =>{\n  var found =  withRouter(({history})=>{\n    var action = data.state.action === \"\"?\"/\":\"/\"+data.state.action;\n    if(typeof action === \"undefined\" || history.location.pathname === action)\n      return \"\";\n    else{\n      return <Redirect to={{ pathname:action }} />;\n    }\n  })(<div></div>);\n  return found;\n};\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n\n    try {\n      if (window.ethereum) {\n        this.eth = new Eth(window.ethereum);\n      } else {\n        this.eth = new Eth(Eth.givenProvider || \"http://localhost:8545\");\n      }\n    } catch (e) {\n      this.eth = new Eth(\"wss://mainnet.infura.io/ws\");\n    }\n\n    //Hanle binds\n    this.handleActionChange = this.handleActionChange.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n\n    const history = createBrowserHistory();\n    const hash = history.location.hash;\n    const action = hash && hash.substring(hash.indexOf(\"/\")+1, hash.length);\n\n    if (hash !== \"#/\" && allowedActions.includes(action)) {\n      this.state = {\n          action\n        };\n    } else {\n      this.state = {\n          action: \"\"\n        };\n    }\n  }\n\n  handleActionChange (event) {\n    this.handleChange(\"action\", event);\n  }\n\n  handleChange (name, event) {\n    this.setState({ [name]: event.target.value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const props = { eth: this.eth };\n\n    return (\n      <div>\n        <TopAppBar />\n          <div className={classes.root}>\n            <Card raised={true} className={classes.topMargin+\" \"+classes.bottomMargin+\" \"+classes.leftPadding+\" \"+classes.width95} >\n              <div className={classes.topPadding}>{introMsg}</div>\n              <FormControl className={classes.formControl}>\n                <InputLabel htmlFor=\"action-simple\">Action</InputLabel>\n                <Select\n                value={this.state.action}\n                onChange={this.handleActionChange}>\n                  <MenuItem value=\"\" key=\"\">\n                    <em>-- choose --</em>\n                  </MenuItem>\n                  <MenuItem value={allowedActions[0]} >\n                  {allowedActions[0]}\n                  </MenuItem>\n                  <MenuItem value={allowedActions[1]} >\n                  {allowedActions[1]}\n                  </MenuItem>\n                </Select>\n                <ActionChooser {...{state: this.state}} />\n              </FormControl>\n            </Card>\n\n            <Switch>\n              <Route path=\"/\" strict exact>\n              </Route>\n              <Route path={`/${allowedActions[0]}`}>\n                  <Encoder {...Object.assign({}, props, this.props)}/>\n              </Route>\n              <Route path={`/${allowedActions[1]}`}>\n                  <Decoder {...Object.assign({}, props, this.props)}/>\n              </Route>\n            </Switch>\n          </div>\n        </div>\n    );\n  }\n}\n\nIndex.propTypes = {\n  classes: PropTypes.object.isRequired,\n  eth: PropTypes.any\n};\n\nexport default withRoot(withStyles( styles )(Index));\n","// @flow\n\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport Index from \"./pages/index\";\n\nconst rootElement = document.querySelector(\"#root\");\nif (rootElement) {\n  render(<Index />, rootElement);\n}\n"],"sourceRoot":""}